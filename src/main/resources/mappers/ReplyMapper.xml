<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.edu.jxnu.rj.lrf.dao.ReplyMapper">
  <resultMap id="BaseResultMap" type="cn.edu.jxnu.rj.lrf.entity.Reply">
    <id column="reply_id" jdbcType="INTEGER" property="replyId" />
    <result column="comment_id" jdbcType="INTEGER" property="commentId" />
    <result column="reply_content" jdbcType="VARCHAR" property="replyContent" />
    <result column="user_id1" jdbcType="INTEGER" property="userId1" />
    <result column="user_id2" jdbcType="INTEGER" property="userId2" />
    <result column="gmt_create" jdbcType="TIMESTAMP" property="gmtCreate" />
  </resultMap>
  <sql id="Base_Column_List">
    reply_id, comment_id, reply_content, user_id1, user_id2, gmt_create
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from campus_reply
    where reply_id = #{replyId,jdbcType=INTEGER}
  </select>
  <select id="selectByCommentId" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from campus_reply
    where comment_id = #{commentId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from campus_reply
    where reply_id = #{replyId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="cn.edu.jxnu.rj.lrf.entity.Reply">
    insert into campus_reply (reply_id, comment_id, reply_content, 
      user_id1, user_id2, gmt_create
      )
    values (#{replyId,jdbcType=INTEGER}, #{commentId,jdbcType=INTEGER}, #{replyContent,jdbcType=VARCHAR}, 
      #{userId1,jdbcType=INTEGER}, #{userId2,jdbcType=INTEGER}, #{gmtCreate,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="cn.edu.jxnu.rj.lrf.entity.Reply">
    insert into campus_reply
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="replyId != null">
        reply_id,
      </if>
      <if test="commentId != null">
        comment_id,
      </if>
      <if test="replyContent != null">
        reply_content,
      </if>
      <if test="userId1 != null">
        user_id1,
      </if>
      <if test="userId2 != null">
        user_id2,
      </if>
      <if test="gmtCreate != null">
        gmt_create,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="replyId != null">
        #{replyId,jdbcType=INTEGER},
      </if>
      <if test="commentId != null">
        #{commentId,jdbcType=INTEGER},
      </if>
      <if test="replyContent != null">
        #{replyContent,jdbcType=VARCHAR},
      </if>
      <if test="userId1 != null">
        #{userId1,jdbcType=INTEGER},
      </if>
      <if test="userId2 != null">
        #{userId2,jdbcType=INTEGER},
      </if>
      <if test="gmtCreate != null">
        #{gmtCreate,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="cn.edu.jxnu.rj.lrf.entity.Reply">
    update campus_reply
    <set>
      <if test="commentId != null">
        comment_id = #{commentId,jdbcType=INTEGER},
      </if>
      <if test="replyContent != null">
        reply_content = #{replyContent,jdbcType=VARCHAR},
      </if>
      <if test="userId1 != null">
        user_id1 = #{userId1,jdbcType=INTEGER},
      </if>
      <if test="userId2 != null">
        user_id2 = #{userId2,jdbcType=INTEGER},
      </if>
      <if test="gmtCreate != null">
        gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
      </if>
    </set>
    where reply_id = #{replyId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.edu.jxnu.rj.lrf.entity.Reply">
    update campus_reply
    set comment_id = #{commentId,jdbcType=INTEGER},
      reply_content = #{replyContent,jdbcType=VARCHAR},
      user_id1 = #{userId1,jdbcType=INTEGER},
      user_id2 = #{userId2,jdbcType=INTEGER},
      gmt_create = #{gmtCreate,jdbcType=TIMESTAMP}
    where reply_id = #{replyId,jdbcType=INTEGER}
  </update>
  <select id="getAllByCommentId" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from campus_reply
    where comment_id = #{commentId,jdbcType=INTEGER}
  </select>
</mapper>